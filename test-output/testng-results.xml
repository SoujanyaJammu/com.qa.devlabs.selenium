<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="5" passed="2">
  <reporter-output>
    <line>
      <![CDATA[Title is correct]]>
    </line>
    <line>
      <![CDATA[It is not as expeted]]>
    </line>
    <line>
      <![CDATA[There are items displayed]]>
    </line>
    <line>
      <![CDATA[Robert Langdon Series Collection 7 Books Set By Dan Brown (Angels And Demons, The Da Vinci Code, The Lost Symbol, Inferno, Origin, Digital Fortress, Deception Point)]]>
    </line>
    <line>
      <![CDATA[The Da Vinci Code: (Robert Langdon Book 2)]]>
    </line>
    <line>
      <![CDATA[The Da Vinci Code (Abridged Edition)]]>
    </line>
    <line>
      <![CDATA[Angels and Demons + The Da Vinci Code + The Lost Symbol(Set of 3 Books)]]>
    </line>
    <line>
      <![CDATA[The Da Vinci Code (SparkNotes Literature Guide) (SparkNotes Literature Guide Series)]]>
    </line>
    <line>
      <![CDATA[The Da Vinci Code]]>
    </line>
    <line>
      <![CDATA[Robert Langdon Series Collection 7 Books Set By Dan Brown (Angels And Demons, The Da Vinci Code, The Lost Symbol, Inferno, Origin, Digital Fortress, Deception Point)]]>
    </line>
    <line>
      <![CDATA[The Robert Langdon Collection by Dan Brown: Inferno/The Lost Symbol/The Da Vinci Code/Angels & Demons]]>
    </line>
    <line>
      <![CDATA[Davinci Code]]>
    </line>
    <line>
      <![CDATA[Coffee Table Book]]>
    </line>
    <line>
      <![CDATA[The Krishna Key]]>
    </line>
    <line>
      <![CDATA[DA VINCI CODE]]>
    </line>
    <line>
      <![CDATA[Angels and Demons: (Robert Langdon Book 1)]]>
    </line>
    <line>
      <![CDATA[One Arranged Murder]]>
    </line>
    <line>
      <![CDATA[The Affair Season 4]]>
    </line>
    <line>
      <![CDATA[Zodiac]]>
    </line>
    <line>
      <![CDATA[The Girl in Room 105]]>
    </line>
    <line>
      <![CDATA[To Kill A Mockingbird: 50th Anniversary Edition: 60th Anniversary Edition]]>
    </line>
    <line>
      <![CDATA[The Complete Novels of Sherlock Holmes]]>
    </line>
    <line>
      <![CDATA[The Complete Novels of Sherlock Holmes]]>
    </line>
    <line>
      <![CDATA[Chanakya's Chant]]>
    </line>
    <line>
      <![CDATA[The Cambridge Companion to Rabindranath Tagore (Cambridge Companions to Literature)]]>
    </line>
    <line>
      <![CDATA[There are no items displayed]]>
    </line>
  </reporter-output>
  <suite name="Test Automation" duration-ms="60862" started-at="2021-02-13T06:48:36Z" finished-at="2021-02-13T06:49:37Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="60862" started-at="2021-02-13T06:48:36Z" finished-at="2021-02-13T06:49:37Z">
      <class name="com.qa.testscripts.TC_AmazonHomePage_002">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.qa.testscripts.TC_AmazonHomePage_002@370736d9]" name="setUp" is-config="true" duration-ms="12189" started-at="2021-02-13T06:48:56Z" finished-at="2021-02-13T06:49:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="loadPages()[pri:0, instance:com.qa.testscripts.TC_AmazonHomePage_002@370736d9]" name="loadPages" is-config="true" duration-ms="1" started-at="2021-02-13T06:49:08Z" finished-at="2021-02-13T06:49:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadPages -->
        <test-method status="FAIL" signature="getFooterlinks()[pri:0, instance:com.qa.testscripts.TC_AmazonHomePage_002@370736d9]" name="getFooterlinks" duration-ms="901" started-at="2021-02-13T06:49:08Z" finished-at="2021-02-13T06:49:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.qa.testscripts.TC_AmazonHomePage_002.getFooterlinks(TC_AmazonHomePage_002.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[It is not as expeted]]>
            </line>
          </reporter-output>
        </test-method> <!-- getFooterlinks -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.testscripts.TC_AmazonHomePage_002@370736d9]" name="tearDown" is-config="true" duration-ms="2042" started-at="2021-02-13T06:49:09Z" finished-at="2021-02-13T06:49:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.TC_AmazonHomePage_002 -->
      <class name="com.qa.testscripts.TC_AmazonSearchItemDDT_003">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItemDDT_003@5f9d02cb]" name="setUp" is-config="true" duration-ms="11366" started-at="2021-02-13T06:49:11Z" finished-at="2021-02-13T06:49:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="loadPages()[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItemDDT_003@5f9d02cb]" name="loadPages" is-config="true" duration-ms="1" started-at="2021-02-13T06:49:24Z" finished-at="2021-02-13T06:49:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadPages -->
        <test-method status="PASS" signature="searchItemDDT(java.lang.String, java.lang.String)[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItemDDT_003@5f9d02cb]" name="searchItemDDT" duration-ms="3689" started-at="2021-02-13T06:49:24Z" data-provider="DataSource" finished-at="2021-02-13T06:49:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Books]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Da vinci code]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[There are items displayed]]>
            </line>
            <line>
              <![CDATA[Robert Langdon Series Collection 7 Books Set By Dan Brown (Angels And Demons, The Da Vinci Code, The Lost Symbol, Inferno, Origin, Digital Fortress, Deception Point)]]>
            </line>
            <line>
              <![CDATA[The Da Vinci Code: (Robert Langdon Book 2)]]>
            </line>
            <line>
              <![CDATA[The Da Vinci Code (Abridged Edition)]]>
            </line>
            <line>
              <![CDATA[Angels and Demons + The Da Vinci Code + The Lost Symbol(Set of 3 Books)]]>
            </line>
            <line>
              <![CDATA[The Da Vinci Code (SparkNotes Literature Guide) (SparkNotes Literature Guide Series)]]>
            </line>
            <line>
              <![CDATA[The Da Vinci Code]]>
            </line>
            <line>
              <![CDATA[Robert Langdon Series Collection 7 Books Set By Dan Brown (Angels And Demons, The Da Vinci Code, The Lost Symbol, Inferno, Origin, Digital Fortress, Deception Point)]]>
            </line>
            <line>
              <![CDATA[The Robert Langdon Collection by Dan Brown: Inferno/The Lost Symbol/The Da Vinci Code/Angels & Demons]]>
            </line>
            <line>
              <![CDATA[Davinci Code]]>
            </line>
            <line>
              <![CDATA[Coffee Table Book]]>
            </line>
            <line>
              <![CDATA[The Krishna Key]]>
            </line>
            <line>
              <![CDATA[DA VINCI CODE]]>
            </line>
            <line>
              <![CDATA[Angels and Demons: (Robert Langdon Book 1)]]>
            </line>
            <line>
              <![CDATA[One Arranged Murder]]>
            </line>
            <line>
              <![CDATA[The Affair Season 4]]>
            </line>
            <line>
              <![CDATA[Zodiac]]>
            </line>
            <line>
              <![CDATA[The Girl in Room 105]]>
            </line>
            <line>
              <![CDATA[To Kill A Mockingbird: 50th Anniversary Edition: 60th Anniversary Edition]]>
            </line>
            <line>
              <![CDATA[The Complete Novels of Sherlock Holmes]]>
            </line>
            <line>
              <![CDATA[The Complete Novels of Sherlock Holmes]]>
            </line>
            <line>
              <![CDATA[Chanakya's Chant]]>
            </line>
            <line>
              <![CDATA[The Cambridge Companion to Rabindranath Tagore (Cambridge Companions to Literature)]]>
            </line>
          </reporter-output>
        </test-method> <!-- searchItemDDT -->
        <test-method status="PASS" signature="loadPages()[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItemDDT_003@5f9d02cb]" name="loadPages" is-config="true" duration-ms="2" started-at="2021-02-13T06:49:27Z" finished-at="2021-02-13T06:49:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadPages -->
        <test-method status="FAIL" signature="searchItemDDT(java.lang.String, java.lang.String)[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItemDDT_003@5f9d02cb]" name="searchItemDDT" duration-ms="3382" started-at="2021-02-13T06:49:27Z" data-provider="DataSource" finished-at="2021-02-13T06:49:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Furniture]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Wooden Tables]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.qa.testscripts.TC_AmazonSearchItemDDT_003.searchItemDDT(TC_AmazonSearchItemDDT_003.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[There are no items displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- searchItemDDT -->
        <test-method status="PASS" signature="loadPages()[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItemDDT_003@5f9d02cb]" name="loadPages" is-config="true" duration-ms="1" started-at="2021-02-13T06:49:31Z" finished-at="2021-02-13T06:49:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadPages -->
        <test-method status="FAIL" signature="searchItemDDT(java.lang.String, java.lang.String)[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItemDDT_003@5f9d02cb]" name="searchItemDDT" duration-ms="3843" started-at="2021-02-13T06:49:31Z" data-provider="DataSource" finished-at="2021-02-13T06:49:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Electronics]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mobile phones]]>
              </value>
            </param>
          </params>
          <exception class="java.nio.file.FileSystemException">
            <message>
              <![CDATA[C:\Users\mandulas\eclipse-workspace\com.qa.devlabs.selenium\Screenshots\searchItemDDT.png: The process cannot access the file because it is being used by another process.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.FileSystemException: C:\Users\mandulas\eclipse-workspace\com.qa.devlabs.selenium\Screenshots\searchItemDDT.png: The process cannot access the file because it is being used by another process.

at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:86)
at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)
at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102)
at sun.nio.fs.WindowsFileCopy.copy(WindowsFileCopy.java:165)
at sun.nio.fs.WindowsFileSystemProvider.copy(WindowsFileSystemProvider.java:278)
at java.nio.file.Files.copy(Files.java:1274)
at org.apache.commons.io.FileUtils.doCopyFile(FileUtils.java:1392)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:885)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:835)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:802)
at com.qa.testscripts.TestBase.captureScreenshot(TestBase.java:70)
at com.qa.testscripts.TC_AmazonSearchItemDDT_003.searchItemDDT(TC_AmazonSearchItemDDT_003.java:41)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.FileSystemException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchItemDDT -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItemDDT_003@5f9d02cb]" name="tearDown" is-config="true" duration-ms="2254" started-at="2021-02-13T06:49:35Z" finished-at="2021-02-13T06:49:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.TC_AmazonSearchItemDDT_003 -->
      <class name="com.qa.testscripts.TC_AmazonSearchItem_001">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItem_001@3108bc]" name="setUp" is-config="true" duration-ms="13899" started-at="2021-02-13T06:48:36Z" finished-at="2021-02-13T06:48:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="loadPages()[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItem_001@3108bc]" name="loadPages" is-config="true" duration-ms="120" started-at="2021-02-13T06:48:50Z" finished-at="2021-02-13T06:48:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadPages -->
        <test-method status="PASS" signature="searchItem()[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItem_001@3108bc]" name="searchItem" duration-ms="3233" started-at="2021-02-13T06:48:50Z" finished-at="2021-02-13T06:48:54Z">
          <reporter-output>
            <line>
              <![CDATA[Title is correct]]>
            </line>
          </reporter-output>
        </test-method> <!-- searchItem -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.testscripts.TC_AmazonSearchItem_001@3108bc]" name="tearDown" is-config="true" duration-ms="1962" started-at="2021-02-13T06:48:54Z" finished-at="2021-02-13T06:48:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.TC_AmazonSearchItem_001 -->
    </test> <!-- Test -->
  </suite> <!-- Test Automation -->
</testng-results>
